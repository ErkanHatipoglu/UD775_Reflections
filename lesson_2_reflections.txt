What happens when you initialize a repository? Why do you need to do it?

.git repository is created so that I can commit on this repository any time later. 

How is the staging area different from the working directory and the repository?

What value do you think it offers?
The files in the staging area are ready to be commited. However the files in the repository
are already commited whereas the files in the working directory are not necessarily to be
commited. By using staging area I can easily commit one logical change per time.  

How can you use the staging area to make sure you have one commit per logical
change?

I think by using git diff and git diff --staged I can be sure I have one commit
per logical change.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

Experimental codes,
Different languages,
Different hardwares,
Different situations,
Different objects.

How do the diagrams help you visualize the branch structure?

by showing the branches...

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

The result is a unified files of both brances.

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?